1. When start press 2 led start blinking 
const int led1 = 2;
const int led2 = 3;
const int startButton = 4;
const int stopButton = 5;

bool blinking = false;

void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(startButton, INPUT_PULLUP); 
  pinMode(stopButton, INPUT_PULLUP);  
}

void loop() {
    if (digitalRead(startButton) == LOW) {
    blinking = true;
    delay(200);
  }

  if (digitalRead(stopButton) == LOW) {
    blinking = false;
    digitalWrite(led1, LOW);
    digitalWrite(led2, LOW);
    delay(200);  
  }

  if (blinking) {
    digitalWrite(led1, LOW);
    digitalWrite(led2, HIGH);
    delay(500);
    digitalWrite(led1, HIGH);
    digitalWrite(led2, LOW);
    delay(500);
  }
}
2. When start press led will glow one after another
const int led1 = 2;
const int led2 = 3;
const int led3 = 6;
const int startButton = 4;
const int stopButton = 5;

bool blinking = false;

void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(startButton, INPUT_PULLUP); 
  pinMode(stopButton, INPUT_PULLUP);  
}

void loop() {
    if (digitalRead(startButton) == LOW) {
    blinking = true;
    delay(200);
  }

  if (digitalRead(stopButton) == LOW) {
    blinking = false;
    digitalWrite(led1, LOW);
    digitalWrite(led2, LOW);
    digitalWrite(led3, LOW);
    delay(200);  
  }

  if (blinking) {
    digitalWrite(led1, HIGH);
    digitalWrite(led2, LOW);
    digitalWrite(led3, LOW);
    delay(500);
    digitalWrite(led1, LOW);
    digitalWrite(led2, HIGH);
    digitalWrite(led3, LOW);
    delay(500);
    digitalWrite(led1, LOW);
    digitalWrite(led2, LOW);
    digitalWrite(led3, HIGH);
    delay(500);
  }
}

3. To control the speed of serially blinking 4 led 

int ledPins[] = {2, 3, 4, 5}; 
int potPin = A0;            
void setup() 
{
  for (int i = 0; i < 4; i++)
  {
    pinMode(ledPins[i], OUTPUT);
  }
}
void loop()
{
  int potValue = analogRead(potPin);
  int delayTime = map(potValue, 0, 1023, 100, 1000);
  for (int i = 0; i < 4; i++)
  {
    digitalWrite(ledPins[i], HIGH);
    delay(delayTime);
    digitalWrite(ledPins[i], LOW);
  }
}

4. To make a ludo dice using arduino

const int ledPins[] = {2, 3, 4, 5, 6, 7}; 
const int buttonPin = 8;

void setup()
  {
  for (int i = 0; i < 6; i++)
  {
    pinMode(ledPins[i], OUTPUT);
    digitalWrite(ledPins[i], LOW); 
  }
  pinMode(buttonPin, INPUT_PULLUP); 
  randomSeed(analogRead(A0));       
}

void loop() 
  {
  if (digitalRead(buttonPin) == LOW) {
    int diceRoll = random(1, 7);

    showDiceFace(diceRoll);
    delay(300); 
  }
}
void showDiceFace(int number)
  {
  for (int i = 0; i < 6; i++)
   {
    digitalWrite(ledPins[i], LOW);
   }
  for (int i = 0; i < number; i++) 
  {
    digitalWrite(ledPins[i], HIGH);
    delay(100); 
  }
}

5. Motor rotate clockwise or anticlockwise
const int buttonCW = 2;
const int buttonStop = 3;
const int buttonCCW = 4;
const int motorIN1 = 8;
const int motorIN2 = 9;
const int ledCW = 10;
const int ledCCW = 11;
void setup() {
  pinMode(buttonCW, INPUT_PULLUP);
  pinMode(buttonStop, INPUT_PULLUP);
  pinMode(buttonCCW, INPUT_PULLUP);
  pinMode(motorIN1, OUTPUT);
  pinMode(motorIN2, OUTPUT);
  pinMode(ledCW, OUTPUT);
  pinMode(ledCCW, OUTPUT);
  stopMotor();
}

void loop() {
  if (digitalRead(buttonCW) == LOW) {
    rotateClockwise();
  }
  else if (digitalRead(buttonCCW) == LOW) {
    rotateCounterClockwise();
  }
  else if (digitalRead(buttonStop) == LOW) {
    stopMotor();
  }
}
void rotateClockwise() {
  digitalWrite(motorIN1, HIGH);
  digitalWrite(motorIN2, LOW);
  digitalWrite(ledCW, HIGH);
  digitalWrite(ledCCW, LOW);
}

void rotateCounterClockwise() {
  digitalWrite(motorIN1, LOW);
  digitalWrite(motorIN2, HIGH);
  digitalWrite(ledCW, LOW);
  digitalWrite(ledCCW, HIGH);
}

void stopMotor() {
  digitalWrite(motorIN1, LOW);
  digitalWrite(motorIN2, LOW);
  digitalWrite(ledCW, LOW);
  digitalWrite(ledCCW, LOW);
}

6. To control a car using button forward, backward, stop with a sensor hc-sr04 to monitor object in front 

const int motorA1 = 8;
const int motorA2 = 9;
const int motorB1 = 10;
const int motorB2 = 11;
const int btnForward = 2;
const int btnBackward = 3;
const int btnStop = 4;
const int trigPin = 6;
const int echoPin = 7;
long duration;
int distance;

void setup() {
  pinMode(motorA1, OUTPUT);
  pinMode(motorA2, OUTPUT);
  pinMode(motorB1, OUTPUT);
  pinMode(motorB2, OUTPUT);
  pinMode(btnForward, INPUT_PULLUP);
  pinMode(btnBackward, INPUT_PULLUP);
  pinMode(btnStop, INPUT_PULLUP);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  Serial.begin(9600);
}

void loop() {
  bool forwardPressed = !digitalRead(btnForward);
  bool backwardPressed = !digitalRead(btnBackward);
  bool stopPressed = !digitalRead(btnStop);
  distance = getDistance();
  if (distance > 0 && distance < 15) {
    stopCar();
    Serial.println("Object detected! Stopping...");
  } else {
    if (forwardPressed) {
      forward();
      Serial.println("Moving Forward");
    } else if (backwardPressed) {
      backward();
      Serial.println("Moving Backward");
    } else if (stopPressed) {
      stopCar();
      Serial.println("Stopped");
    }
  }

  delay(100); 
}
void forward() {
  digitalWrite(motorA1, HIGH);
  digitalWrite(motorA2, LOW);
  digitalWrite(motorB1, HIGH);
  digitalWrite(motorB2, LOW);
}

void backward() {
  digitalWrite(motorA1, LOW);
  digitalWrite(motorA2, HIGH);
  digitalWrite(motorB1, LOW);
  digitalWrite(motorB2, HIGH);
}

void stopCar() {
  digitalWrite(motorA1, LOW);
  digitalWrite(motorA2, LOW);
  digitalWrite(motorB1, LOW);
  digitalWrite(motorB2, LOW);
}
int getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  int dist = duration * 0.034 / 2;
  return dist;
}
