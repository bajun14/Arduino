// Pin configuration
const int trigFront = 2;
const int echoFront = 3;
const int trigBack  = 4;
const int echoBack  = 5;

const int in1 = 8;  
const int in2 = 9;
const int in3 = 10;  
const int in4 = 11;

const int ledForward = 6;
const int ledBackward = 7;

const int distanceThreshold = 20;

void setup() {
  pinMode(trigFront, OUTPUT);
  pinMode(echoFront, INPUT);
  pinMode(trigBack, OUTPUT);
  pinMode(echoBack, INPUT);

  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);

  pinMode(ledForward, OUTPUT);
  pinMode(ledBackward, OUTPUT);

  Serial.begin(9600);
}

long getDistance(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  long distance = duration * 0.034 / 2; 
  return distance;
}

void moveForward() {
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}

void moveBackward() {
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void stopMotors() {
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}

void loop() {
  long frontDistance = getDistance(trigFront, echoFront);
  long backDistance  = getDistance(trigBack, echoBack);

  Serial.print("Front: ");
  Serial.print(frontDistance);
  Serial.print(" cm, Back: ");
  Serial.print(backDistance);
  Serial.println(" cm");

  if (frontDistance < distanceThreshold) {
    moveForward();
    digitalWrite(ledForward, HIGH);
    digitalWrite(ledBackward, LOW);
  } else if (backDistance < distanceThreshold) {
    moveBackward();
    digitalWrite(ledForward, LOW);
    digitalWrite(ledBackward, HIGH);
  } else {
    stopMotors();
    digitalWrite(ledForward, LOW);
    digitalWrite(ledBackward, LOW);
  }

  delay(200);
}
